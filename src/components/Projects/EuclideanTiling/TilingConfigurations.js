const configurations = [{
  name: 'Regular',
  configurations: [{
    a: '3⁶',
    b: '3/r60/r(1e,30)',
  }, {
    a: '6³',
    b: '6/r(1e,90)/r60',
  }, {
    a: '4⁴',
    b: '4/r(1e)/r90',
  }],
}, {
  name: 'Uniform',
  configurations: [{
    a: '3.12²',
    b: '12-3/r60/r(1e,90)',
  }, {
    a: '3.4.6.4',
    b: '6-4-3/r60/r(1c,90)',
  }, {
    a: '4.6.12',
    b: '12-6,4/r60/r(1c,30)',
  }, {
    a: '(3.6)²',
    b: '6-3/r60/r(1e,60)',
  }, {
    a: '4.8²',
    b: '8-4/r90/r(1e,45)',
  }, {
    a: '3².4.3.4',
    b: '4-3,3-4,3/r90/r(2e,75)',
  }, {
    a: '3³.4²',
    b: '4-4,3-0,3,3/m90/r(2e,75)',
  }, {
    a: '3⁴.6',
    b: '6-3-3,3/r60/r(2e,79)',
  }],
}, {
  name: '2 Uniform',
  configurations: [{
    a: '3⁶; 3².4.3.4',
    b: '3-4-3/m30/r(1c,90)',
  }, {
    a: '3.4.6.4; 3².4.3.4',
    b: '6-4-3,3/m30/r(2e)',
  }, {
    a: '3.4.6.5; 3³.4²',
    b: '6-4-3-3/r60/r(2e,30)',
  }, {
    a: '3.4.6.4; 3.4².6',
    b: '6-4-3,4,3-6/m30/r(2c,30)',
  }, {
    a: '4.6.12; 3.4.6.4',
    b: '12-4,6-3/m30/r(1c,30)',
  }, {
    a: '3⁶; 3².4.12',
    b: '12-4,3-0,3/m30/r(1c)',
  }, {
    a: '3.12²; 3.4.3.12',
    b: '12-3-4/r90/r(1e,60)',
  }, {
    a: '3⁶; 3².6²',
    b: '3-6/r60/r(1c,90)',
  }, {
    a: '[3⁶; 3⁴.6]¹',
    b: '6-3-3,3/r60/r(2e,30)',
  }, {
    a: '[3⁶; 3⁴.6]²',
    b: '6-3-3,3-3/r60/r(3e,46)',
  }, {
    a: '3².6²; 3⁴.6',
    b: '6-3/m90/r(2e,19)',
  }, {
    a: '3.6.3.6; 3².6²',
    b: '6-3/m90/r(1e,180)/r(1e,90)',
  }, {
    a: '3.4².6; 3.6.3.6',
    b: '6-3,4-6,4/r(1c,60)/m90',
  }, {
    a: '[3³.4²; 3².4.3.4]¹',
    b: '4-3,3-4,3/r90/m(2c,60)',
  }, {
    a: '[3³.4²; 3².4.3.4]²',
    b: '4-3,3,3-4,3/r(3e,37.9)/r(1e,270)/r(2e,195)',
  }, {
    a: '[4⁴; 3³.4²]¹',
    b: '4-4,0,3-3/r(3e,7.4)/r(1e,45)/m',
  }, {
    a: '[4⁴; 3³.4²]²',
    b: '4-4,0,4-3,0,0,3/r(3e,7.4)/r(1e,90)/m',
  }, {
    a: '[3⁶; 3³.4²]¹',
    b: '4-3-3,3/r(2e,0)/r/r(1e,90)',
  }, {
    a: '[3⁶; 3³.4²]²',
    b: '4-3-3-3/r(4e,22.6)/r(1e,90)/r',
  }],
}, {
  name: '3-Uniform (2 Vertex Types)',
  configurations: [{
    a: '(3⁶)²; 3⁴.6',
    b: '6-3-3,3/r60/r(2e,30)',
  }],
}, {
  name: '3-Uniform (3 Vertex Types)',
  configurations: [{
    a: '3³.4²; 3².4.3.4; 4⁴',
    b: '4-3-3-0,4/r90/r(3e,20)',
  }],
}];

const find = (t, e) => {
  for (const group of configurations) {
    for (const configuration of group.configurations) {
      if (configuration[t] === e) {
        return configuration;
      }
    }
  }
};

export const findByA = (e) => find('a', e);
export const findByB = (e) => find('b', e);

export default configurations;
